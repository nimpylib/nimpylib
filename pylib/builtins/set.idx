nimTitle	set	pylib/builtins/set.html	module src/pylib/builtins/set		0
nim	SomeSet	pylib/builtins/set.html#SomeSet	type SomeSet		18
nim	set	pylib/builtins/set.html#set_2	proc set[H](): PySet[H]		29
nim	pyset	pylib/builtins/set.html#pyset_2	proc pyset[H](): PySet[H]		29
nim	set	pylib/builtins/set.html#set,HashSet[H]	proc set[H](s: HashSet[H]): PySet[H]		31
nim	pyset	pylib/builtins/set.html#pyset,HashSet[H]	proc pyset[H](s: HashSet[H]): PySet[H]		31
nim	set	pylib/builtins/set.html#set,SomePySet[H]	proc set[H](s: SomePySet[H]): PySet[H]		33
nim	pyset	pylib/builtins/set.html#pyset,SomePySet[H]	proc pyset[H](s: SomePySet[H]): PySet[H]		33
nim	set	pylib/builtins/set.html#set,openArray[H]	proc set[H](arr: openArray[H]): PySet[H]		34
nim	pyset	pylib/builtins/set.html#pyset,openArray[H]	proc pyset[H](arr: openArray[H]): PySet[H]		34
nim	set	pylib/builtins/set.html#set,Iterable[H]	proc set[H](iterable: Iterable[H]): PySet[H]		35
nim	pyset	pylib/builtins/set.html#pyset,Iterable[H]	proc pyset[H](iterable: Iterable[H]): PySet[H]		28
nim	frozenset	pylib/builtins/set.html#frozenset_2	proc frozenset[H](): PyFrozenSet[H]		40
nim	frozenset	pylib/builtins/set.html#frozenset,HashSet[H]	proc frozenset[H](s: HashSet[H]): PyFrozenSet[H]		42
nim	frozenset	pylib/builtins/set.html#frozenset,SomePySet[H]	proc frozenset[H](s: SomePySet[H]): PyFrozenSet[H]		44
nim	frozenset	pylib/builtins/set.html#frozenset,openArray[H]	proc frozenset[H](arr: openArray[H]): PyFrozenSet[H]		45
nim	frozenset	pylib/builtins/set.html#frozenset,Iterable[H]	proc frozenset[H](it: Iterable[H]): PyFrozenSet[H]		46
nim	pysetLit	pylib/builtins/set.html#pysetLit.m	macro pysetLit(lit): PySet		56
nim	copy	pylib/builtins/set.html#copy.t	template copy[H; S: SomePySet[H]](self): S		67
nim	`-`	pylib/builtins/set.html#-,PySet[H],PySet[H]	proc `-`[H](self, o: PySet[H]): PySet[H]		71
nim	`-`	pylib/builtins/set.html#-,PyFrozenSet[H],SomePySet[H]	proc `-`[H](self: PyFrozenSet[H]; o: SomePySet[H]): PyFrozenSet[H]		73
nim	`-`	pylib/builtins/set.html#-,PySet[H],PyFrozenSet[H]	proc `-`[H](self: PySet[H]; o: PyFrozenSet[H]): PyFrozenSet[H]		83
nim	intersection	pylib/builtins/set.html#intersection,PySet[H],PySet[H]	proc intersection[H](self, o: PySet[H]): PySet[H]		71
nim	intersection	pylib/builtins/set.html#intersection,PyFrozenSet[H],SomePySet[H]	proc intersection[H](self: PyFrozenSet[H]; o: SomePySet[H]): PyFrozenSet[H]		73
nim	intersection	pylib/builtins/set.html#intersection,PySet[H],PyFrozenSet[H]	proc intersection[H](self: PySet[H]; o: PyFrozenSet[H]): PyFrozenSet[H]		83
nim	union	pylib/builtins/set.html#union,PySet[H],PySet[H]	proc union[H](self, o: PySet[H]): PySet[H]		71
nim	union	pylib/builtins/set.html#union,PyFrozenSet[H],SomePySet[H]	proc union[H](self: PyFrozenSet[H]; o: SomePySet[H]): PyFrozenSet[H]		73
nim	union	pylib/builtins/set.html#union,PySet[H],PyFrozenSet[H]	proc union[H](self: PySet[H]; o: PyFrozenSet[H]): PyFrozenSet[H]		83
nim	difference	pylib/builtins/set.html#difference,PySet[H],PySet[H]	proc difference[H](self, o: PySet[H]): PySet[H]		71
nim	difference	pylib/builtins/set.html#difference,PyFrozenSet[H],SomePySet[H]	proc difference[H](self: PyFrozenSet[H]; o: SomePySet[H]): PyFrozenSet[H]		73
nim	difference	pylib/builtins/set.html#difference,PySet[H],PyFrozenSet[H]	proc difference[H](self: PySet[H]; o: PyFrozenSet[H]): PyFrozenSet[H]		83
nim	symmetric_difference	pylib/builtins/set.html#symmetric_difference,PySet[H],PySet[H]	proc symmetric_difference[H](self, o: PySet[H]): PySet[H]		71
nim	symmetric_difference	pylib/builtins/set.html#symmetric_difference,PyFrozenSet[H],SomePySet[H]	proc symmetric_difference[H](self: PyFrozenSet[H]; o: SomePySet[H]): PyFrozenSet[H]		73
nim	symmetric_difference	pylib/builtins/set.html#symmetric_difference,PySet[H],PyFrozenSet[H]	proc symmetric_difference[H](self: PySet[H]; o: PyFrozenSet[H]): PyFrozenSet[H]		83
nim	`==`	pylib/builtins/set.html#==,SomePySet[H],set[H]	proc `==`[H](self: SomePySet[H]; s: set[H]): bool		90
nim	`==`	pylib/builtins/set.html#==,set[H],SomePySet[H]	proc `==`[H](s: set[H]; self: SomePySet[H]): bool		95
nim	`<=`	pylib/builtins/set.html#<=,SomePySet[H],set[H]	proc `<=`[H](self: SomePySet[H]; s: set[H]): bool		90
nim	`<=`	pylib/builtins/set.html#<=,set[H],SomePySet[H]	proc `<=`[H](s: set[H]; self: SomePySet[H]): bool		96
nim	`<`	pylib/builtins/set.html#<,SomePySet[H],set[H]	proc `<`[H](self: SomePySet[H]; s: set[H]): bool		90
nim	`<`	pylib/builtins/set.html#<,set[H],SomePySet[H]	proc `<`[H](s: set[H]; self: SomePySet[H]): bool		97
nim	`^`	pylib/builtins/set.html#^.t,M,S	template `^`[H; M: SomePySet[H]; S: SomePySet[H]](self: M; s: S): M | S		105
nim	`&`	pylib/builtins/set.html#&.t,M,S	template `&`[H; M: SomePySet[H]; S: SomePySet[H]](self: M; s: S): M | S		106
nim	`|`	pylib/builtins/set.html#|.t,M,S	template `|`[H; M: SomePySet[H]; S: SomePySet[H]](self: M; s: S): M | S		107
nim	issuperset	pylib/builtins/set.html#issuperset,SomePySet[H],SomePySet[H],S	proc issuperset[H, S](self, o: SomePySet[H]; s: S): bool		112
nim	issubset	pylib/builtins/set.html#issubset,SomePySet[H],SomePySet[H],S	proc issubset[H, S](self, o: SomePySet[H]; s: S): bool		113
nim	intersection	pylib/builtins/set.html#intersection,Self,S	proc intersection[H; Self: SomePySet[H]; S: not PySet[H]](self: Self; s: S): Self		117
nim	intersection	pylib/builtins/set.html#intersection,Self,auto,auto,varargs[S]	proc intersection[H; Self: SomePySet[H]; S](self: Self; s1: auto; s2: auto;\n                                       x: varargs[S]): Self		127
nim	union	pylib/builtins/set.html#union,Self,S	proc union[H; Self: SomePySet[H]; S: not PySet[H]](self: Self; s: S): Self		117
nim	union	pylib/builtins/set.html#union,Self,auto,auto,varargs[S]	proc union[H; Self: SomePySet[H]; S](self: Self; s1: auto; s2: auto; x: varargs[S]): Self		128
nim	difference	pylib/builtins/set.html#difference,Self,S	proc difference[H; Self: SomePySet[H]; S: not PySet[H]](self: Self; s: S): Self		117
nim	difference	pylib/builtins/set.html#difference,Self,auto,auto,varargs[S]	proc difference[H; Self: SomePySet[H]; S](self: Self; s1: auto; s2: auto;\n                                     x: varargs[S]): Self		129
nim	symmetric_difference	pylib/builtins/set.html#symmetric_difference,Self,S	proc symmetric_difference[H; Self: SomePySet[H]; S: not PySet[H]](self: Self; s: S): Self		117
nim	symmetric_difference	pylib/builtins/set.html#symmetric_difference,Self,auto,auto,varargs[S]	proc symmetric_difference[H; Self: SomePySet[H]; S](self: Self; s1: auto; s2: auto;\n    x: varargs[S]): Self		130
nim	isdisjoint	pylib/builtins/set.html#isdisjoint,SomePySet[H],S	proc isdisjoint[H, S](self: SomePySet[H]; s: S): bool		132
nim	add	pylib/builtins/set.html#add,PySet[H],H	proc add[H](self: var PySet[H]; x: H)		135
nim	`discard`	pylib/builtins/set.html#discard,PySet[H],H	proc `discard`[H](self: var PySet[H]; ele: H)		136
nim	pydiscard	pylib/builtins/set.html#pydiscard,PySet[H],H	proc pydiscard[H](self: var PySet[H]; ele: H)		139
nim	remove	pylib/builtins/set.html#remove,PySet[H],H	proc remove[H](self: var PySet[H]; ele: H)		143
nim	`-=`	pylib/builtins/set.html#-=,SomePySet[H],S	proc `-=`[H; S: SomeSet[H]](self: var SomePySet[H]; s: S)		149
nim	difference_update	pylib/builtins/set.html#difference_update,SomePySet[H],I	proc difference_update[H; I: Iterable[H]](self: var SomePySet[H]; i: I)		152
nim	`|=`	pylib/builtins/set.html#|=,SomePySet[H],S	proc `|=`[H; S: SomeSet[H]](self: var SomePySet[H]; s: S)		149
nim	update	pylib/builtins/set.html#update,SomePySet[H],I	proc update[H; I: Iterable[H]](self: var SomePySet[H]; i: I)		153
nim	`&=`	pylib/builtins/set.html#&=,SomePySet[H],S	proc `&=`[H; S: SomeSet[H]](self: var SomePySet[H]; s: S)		149
nim	intersection_update	pylib/builtins/set.html#intersection_update,SomePySet[H],I	proc intersection_update[H; I: Iterable[H]](self: var SomePySet[H]; i: I)		156
nimgrp	==	pylib/builtins/set.html#==-procs-all	proc		95
nimgrp	-	pylib/builtins/set.html#--procs-all	proc		83
nimgrp	pyset	pylib/builtins/set.html#pyset-procs-all	proc		21
nimgrp	symmetricdifference	pylib/builtins/set.html#symmetric_difference-procs-all	proc		83
nimgrp	frozenset	pylib/builtins/set.html#frozenset-procs-all	proc		40
nimgrp	<=	pylib/builtins/set.html#<=-procs-all	proc		96
nimgrp	union	pylib/builtins/set.html#union-procs-all	proc		83
nimgrp	<	pylib/builtins/set.html#<-procs-all	proc		97
nimgrp	set	pylib/builtins/set.html#set-procs-all	proc		29
nimgrp	intersection	pylib/builtins/set.html#intersection-procs-all	proc		83
nimgrp	difference	pylib/builtins/set.html#difference-procs-all	proc		83
heading	set type	pylib/builtins/set.html#set-type	  set type		0
heading	Literal	pylib/builtins/set.html#literal	  Literal		0
