nimTitle	list	_._/builtins/list.html	module src/pylib/builtins/list		0
nim	nimArrayAsList	_._/builtins/list.html#nimArrayAsList.c,array[I,T]	converter nimArrayAsList[T; I](arr: array[I, T]): PyList[T]		23
nim	len	_._/builtins/list.html#len.t,PyList	template len(self: PyList): int		26
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],int,T	proc `[]=`[T](self: var PyList[T]; idx: int; x: T)		31
nim	`[]`	_._/builtins/list.html#[],PyList[T],int	proc `[]`[T](self: PyList[T]; idx: int): T		33
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],HSlice,openArray[T]	proc `[]=`[T](self: var PyList[T]; s: HSlice; x: openArray[T])		36
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],HSlice,PyList[T]	proc `[]=`[T](self: var PyList[T]; s: HSlice; x: PyList[T])		38
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],BackwardsIndex,T	proc `[]=`[T](self: var PyList[T]; s: BackwardsIndex; x: T)		41
nim	list	_._/builtins/list.html#list,sinkSeqable[T]	proc list[T](s: sink Seqable[T]): PyList[T]		47
nim	list	_._/builtins/list.html#list_2	proc list[T](iter: (Iterable[T] and not Seqable[T])): PyList[T]		51
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],HSlice,Iterable[T]	proc `[]=`[T](self: var PyList[T]; s: HSlice; x: Iterable[T])		52
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],PySlice,Sequence[T]	proc `[]=`[T](self: var PyList[T]; s: PySlice; x: Sequence[T])		61
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],PySlice,	proc `[]=`[T](self: var PyList[T]; s: PySlice; x: not Sequence[T] and Iterable[T])		75
nim	append	_._/builtins/list.html#append,PyList[T],T	proc append[T](self: var PyList[T]; x: T)		81
nim	`+=`	_._/builtins/list.html#+=,PyList[T],openArray[T]	proc `+=`[T](self: var PyList[T]; ls: openArray[T])		82
nim	`+=`	_._/builtins/list.html#+=,PyList[T],PyList[T]	proc `+=`[T](self: var PyList[T]; ls: PyList[T])		83
nim	`[]`	_._/builtins/list.html#[],PyList[T],HSlice	proc `[]`[T](self: PyList[T]; s: HSlice): PyList[T]		85
nim	`[]`	_._/builtins/list.html#[],PyList[T],BackwardsIndex	proc `[]`[T](self: PyList[T]; s: BackwardsIndex): T		87
nim	`[]`	_._/builtins/list.html#[],PyList[T],PySlice	proc `[]`[T](self: PyList[T]; s: PySlice): PyList[T]		90
nim	reverse	_._/builtins/list.html#reverse,PyList	proc reverse(self: var PyList)		100
nim	pop	_._/builtins/list.html#pop,PyList[T]	proc pop[T](self: var PyList[T]): T		102
nim	pop	_._/builtins/list.html#pop,PyList[T],int	proc pop[T](self: var PyList[T]; index: int): T		103
nim	extend	_._/builtins/list.html#extend,PyList[T],openArray[T]	proc extend[T](self: var PyList[T]; ls: openArray[T])		109
nim	extend	_._/builtins/list.html#extend.t,PyList[T],Iterable[T]	template extend[T](self: var PyList[T]; ls: Iterable[T])		112
nim	insert	_._/builtins/list.html#insert,PyList[T],int,T	proc insert[T](self: var PyList[T]; idx: int; x: T)		116
nim	delitem	_._/builtins/list.html#delitem,PyList,int	proc delitem(self: var PyList; idx: int)		122
nim	clear	_._/builtins/list.html#clear,PyList	proc clear(self: var PyList)		125
nim	sort	_._/builtins/list.html#sort,PyList[T]	proc sort[T](self: var PyList[T]; reverse = false)		132
nim	sorted	_._/builtins/list.html#sorted,PyList[T]	proc sorted[T](self: PyList[T]; reverse = false): PyList[T]		136
nim	`+`	_._/builtins/list.html#+,PyList[T],openArray[T]	proc `+`[T](self: PyList[T]; x: openArray[T]): PyList[T]		140
nim	list	_._/builtins/list.html#list,sinkseq[T]	proc list[T](x: sink seq[T]): PyList[T]		143
nim	list	_._/builtins/list.html#list,sinkopenArray[T]	proc list[T](a: sink openArray[T]): PyList[T]		144
nim	list	_._/builtins/list.html#list_3	proc list[T](): PyList[T]		150
nim	`*`	_._/builtins/list.html#*,Natural,PyList[T]	proc `*`[T](n: Natural; ls: PyList[T]): PyList[T]		155
nim	`*`	_._/builtins/list.html#*.t,PyList[T],Natural	template `*`[T](ls: PyList[T]; n: Natural): PyList[T]		159
nim	`*=`	_._/builtins/list.html#*=,PyList[T],int	proc `*=`[T](self: var PyList[T]; n: int)		162
nim	`+`	_._/builtins/list.html#+.t,PyList[T],PyList[T]	template `+`[T](self: var PyList[T]; x: PyList[T]): PyList[T]		166
nim	repr	_._/builtins/list.html#repr.t,PyList	template repr(self: PyList): string		42
nim	`$`	_._/builtins/list.html#$.t,PyList	template `$`(self: PyList): string		180
nim	sort	_._/builtins/list.html#sort,PyList[T],proc(T)	proc sort[T, K](self: var PyList[T]; key: proc (x: T): K; reverse = false)		242
nim	sorted	_._/builtins/list.html#sorted,Sequence[T],proc(T)	proc sorted[T, K](x: Sequence[T]; key: proc (x: T): K; reverse = false): PyList[T]		247
nim	sorted	_._/builtins/list.html#sorted,,proc(T)	proc sorted[T, K](x: not Sequence[T] and Iterable[T]; key: proc (x: T): K;\n             reverse = false): PyList[T]		252
nim	delitem	_._/builtins/list.html#delitem,PyList,Slice[int]	proc delitem(ms: var PyList; indices: Slice[int])		13
nim	delitem	_._/builtins/list.html#delitem,PyList,PySlice	proc delitem(ms: var PyList; indices: PySlice)		257
nim	`[]=`	_._/builtins/list.html#[]=,PyList[T],Slice[int],Sequence[T]	proc `[]=`[T](ms: var PyList[T]; indices: Slice[int]; o: Sequence[T])		258
nimgrp	sort	_._/builtins/list.html#sort-procs-all	proc		132
nimgrp	[]=	_._/builtins/list.html#[]=-procs-all	proc		31
nimgrp	list	_._/builtins/list.html#list-procs-all	proc		47
nimgrp	sorted	_._/builtins/list.html#sorted-procs-all	proc		136
nimgrp	[]	_._/builtins/list.html#[]-procs-all	proc		33
nimgrp	+=	_._/builtins/list.html#+=-procs-all	proc		82
nimgrp	pop	_._/builtins/list.html#pop-procs-all	proc		102
nimgrp	delitem	_._/builtins/list.html#delitem-procs-all	proc		122
