nimTitle	collections	_._/collections_abc/collections.html	module src/pylib/collections_abc/collections		0
nim	Sized	_._/collections_abc/collections.html#Sized	type Sized		5
nim	Container	_._/collections_abc/collections.html#Container	type Container		8
nim	Collection	_._/collections_abc/collections.html#Collection	type Collection		14
nim	Sequence	_._/collections_abc/collections.html#Sequence	type Sequence		16
nim	MutableSequence	_._/collections_abc/collections.html#MutableSequence	type MutableSequence		19
nim	Mapping	_._/collections_abc/collections.html#Mapping	type Mapping		25
nim	contains	_._/collections_abc/collections.html#contains,Container[T],T	proc contains[T](s: Container[T]; x: T): bool		33
nim	index	_._/collections_abc/collections.html#index,Sequence[T],T,int,int	proc index[T](s: Sequence[T]; x: T; start = 0; stop = -1): int		39
nim	count	_._/collections_abc/collections.html#count,Sequence[T],T	proc count[T](s: Sequence[T]; x: T): int		48
nim	`@`	_._/collections_abc/collections.html#@,Sequence[T]	proc `@`[T](s: Sequence[T]): seq[T]		60
nim	append	_._/collections_abc/collections.html#append,MutableSequence[T],T	proc append[T](ms: MutableSequence[T]; x: T)		68
nim	clear	_._/collections_abc/collections.html#clear,MutableSequence	proc clear(ms: MutableSequence)		71
nim	reverse	_._/collections_abc/collections.html#reverse,MutableSequence	proc reverse(ms: MutableSequence)		75
nim	extend	_._/collections_abc/collections.html#extend,MutableSequence[T],Iterable[T]	proc extend[T](ms: MutableSequence[T]; it: Iterable[T])		80
nim	pop	_._/collections_abc/collections.html#pop,MutableSequence[T],int	proc pop[T](ms: MutableSequence[T]; index = -1): T		84
nim	remove	_._/collections_abc/collections.html#remove,MutableSequence[T],T	proc remove[T](ms: MutableSequence[T]; x: T)		89
nim	keys	_._/collections_abc/collections.html#keys.t,Mapping[K,V]	template keys[K, V](m: Mapping[K, V]): untyped		94
nim	values	_._/collections_abc/collections.html#values.i,Mapping[K,V]	iterator values[K, V](m: Mapping[K, V]): V		96
nim	items	_._/collections_abc/collections.html#items.i,Mapping[K,V]	iterator items[K, V](m: Mapping[K, V]): (K, V)		98
nim	contains	_._/collections_abc/collections.html#contains,Mapping[K,V],K	proc contains[K, V](m: Mapping[K, V]; k: K): bool		101
nim	get	_._/collections_abc/collections.html#get,Mapping[K,V],K	proc get[K, V](m: Mapping[K, V]; key: K): V		105
nim	get	_._/collections_abc/collections.html#get,Mapping[K,V],K,V	proc get[K, V](m: Mapping[K, V]; key: K; default: V): V		106
nim	`==`	_._/collections_abc/collections.html#==,Mapping[K,V],Mapping[K,V]	proc `==`[K, V](a, b: Mapping[K, V]): bool		110
nimgrp	contains	_._/collections_abc/collections.html#contains-procs-all	proc		33
nimgrp	get	_._/collections_abc/collections.html#get-procs-all	proc		105
